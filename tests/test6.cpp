#include <gtest/gtest.h>  // googletest header file
#include <filesystem>
#include "../include/P452.hpp"
using std::filesystem::current_path;
inline std::string
resolvePath(const std::string& relPath)
{
  auto baseDir = std::filesystem::current_path();
  while (baseDir.has_relative_path()) {
    auto test = std::filesystem::path(relPath);
   auto combinePath = baseDir / test;
    if (std::filesystem::exists(combinePath)) {
      return combinePath.string();
    }
    baseDir = baseDir.parent_path();
  }
  throw std::runtime_error("File not found!" + relPath);
}
TEST(P452, Test6) {
std::string path = resolvePath("src/maps/");
P452DigitalMaps maps = P452DigitalMaps(path); // load P452 maps;
// Path profile: test_profile_cebreros_3995_no_clutter
double press = 1013.000000;
double temp = 15.000000;
double phit_e = 4.367500;
double phit_n = 40.452500;
double phir_e = 4.420670;
double phir_n = 39.970500;
double Gt = 10.000000;
double Gr = 22.000000;
int    pol = 2;
double dct = 500.000000;
double dcr = 500.000000;
double f = 26.000000;
double p = 10.000000;
double htg = 21.000000;
double hrg = 6.000000;
double rDist[151];
double rHeight[151];
double g[151];
int iZone[151];
rDist[0] = 0.000000000;
rDist[1] = 0.030000000;
rDist[2] = 0.060000000;
rDist[3] = 0.090000000;
rDist[4] = 0.120000000;
rDist[5] = 0.150000000;
rDist[6] = 0.180000000;
rDist[7] = 0.210000000;
rDist[8] = 0.240000000;
rDist[9] = 0.270000000;
rDist[10] = 0.300000000;
rDist[11] = 0.330000000;
rDist[12] = 0.360000000;
rDist[13] = 0.390000000;
rDist[14] = 0.420000000;
rDist[15] = 0.450000000;
rDist[16] = 0.480000000;
rDist[17] = 0.510000000;
rDist[18] = 0.540000000;
rDist[19] = 0.570000000;
rDist[20] = 0.600000000;
rDist[21] = 0.630000000;
rDist[22] = 0.660000000;
rDist[23] = 0.690000000;
rDist[24] = 0.720000000;
rDist[25] = 0.750000000;
rDist[26] = 0.780000000;
rDist[27] = 0.810000000;
rDist[28] = 0.840000000;
rDist[29] = 0.870000000;
rDist[30] = 0.900000000;
rDist[31] = 0.930000000;
rDist[32] = 0.960000000;
rDist[33] = 0.990000000;
rDist[34] = 1.020000000;
rDist[35] = 1.050000000;
rDist[36] = 1.080000000;
rDist[37] = 1.110000000;
rDist[38] = 1.140000000;
rDist[39] = 1.170000000;
rDist[40] = 1.200000000;
rDist[41] = 1.230000000;
rDist[42] = 1.260000000;
rDist[43] = 1.290000000;
rDist[44] = 1.320000000;
rDist[45] = 1.350000000;
rDist[46] = 1.380000000;
rDist[47] = 1.410000000;
rDist[48] = 1.440000000;
rDist[49] = 1.470000000;
rDist[50] = 1.500000000;
rDist[51] = 1.530000000;
rDist[52] = 1.560000000;
rDist[53] = 1.590000000;
rDist[54] = 1.620000000;
rDist[55] = 1.650000000;
rDist[56] = 1.680000000;
rDist[57] = 1.710000000;
rDist[58] = 1.740000000;
rDist[59] = 1.770000000;
rDist[60] = 1.800000000;
rDist[61] = 1.830000000;
rDist[62] = 1.860000000;
rDist[63] = 1.890000000;
rDist[64] = 1.920000000;
rDist[65] = 1.950000000;
rDist[66] = 1.980000000;
rDist[67] = 2.010000000;
rDist[68] = 2.040000000;
rDist[69] = 2.070000000;
rDist[70] = 2.100000000;
rDist[71] = 2.130000000;
rDist[72] = 2.160000000;
rDist[73] = 2.190000000;
rDist[74] = 2.220000000;
rDist[75] = 2.250000000;
rDist[76] = 2.280000000;
rDist[77] = 2.310000000;
rDist[78] = 2.340000000;
rDist[79] = 2.370000000;
rDist[80] = 2.400000000;
rDist[81] = 2.430000000;
rDist[82] = 2.460000000;
rDist[83] = 2.490000000;
rDist[84] = 2.520000000;
rDist[85] = 2.550000000;
rDist[86] = 2.580000000;
rDist[87] = 2.610000000;
rDist[88] = 2.640000000;
rDist[89] = 2.670000000;
rDist[90] = 2.700000000;
rDist[91] = 2.730000000;
rDist[92] = 2.760000000;
rDist[93] = 2.790000000;
rDist[94] = 2.820000000;
rDist[95] = 2.850000000;
rDist[96] = 2.880000000;
rDist[97] = 2.910000000;
rDist[98] = 2.940000000;
rDist[99] = 2.970000000;
rDist[100] = 3.000000000;
rDist[101] = 3.030000000;
rDist[102] = 3.060000000;
rDist[103] = 3.090000000;
rDist[104] = 3.120000000;
rDist[105] = 3.150000000;
rDist[106] = 3.180000000;
rDist[107] = 3.210000000;
rDist[108] = 3.240000000;
rDist[109] = 3.270000000;
rDist[110] = 3.300000000;
rDist[111] = 3.330000000;
rDist[112] = 3.360000000;
rDist[113] = 3.390000000;
rDist[114] = 3.420000000;
rDist[115] = 3.450000000;
rDist[116] = 3.480000000;
rDist[117] = 3.510000000;
rDist[118] = 3.540000000;
rDist[119] = 3.570000000;
rDist[120] = 3.600000000;
rDist[121] = 3.630000000;
rDist[122] = 3.660000000;
rDist[123] = 3.690000000;
rDist[124] = 3.720000000;
rDist[125] = 3.750000000;
rDist[126] = 3.780000000;
rDist[127] = 3.810000000;
rDist[128] = 3.840000000;
rDist[129] = 3.870000000;
rDist[130] = 3.900000000;
rDist[131] = 3.930000000;
rDist[132] = 3.960000000;
rDist[133] = 3.990000000;
rDist[134] = 4.020000000;
rDist[135] = 4.050000000;
rDist[136] = 4.080000000;
rDist[137] = 4.110000000;
rDist[138] = 4.140000000;
rDist[139] = 4.170000000;
rDist[140] = 4.200000000;
rDist[141] = 4.230000000;
rDist[142] = 4.260000000;
rDist[143] = 4.290000000;
rDist[144] = 4.320000000;
rDist[145] = 4.350000000;
rDist[146] = 4.380000000;
rDist[147] = 4.410000000;
rDist[148] = 4.440000000;
rDist[149] = 4.470000000;
rDist[150] = 4.500000000;
rHeight[0] = 719.878000;
rHeight[1] = 719.722000;
rHeight[2] = 719.604000;
rHeight[3] = 718.770000;
rHeight[4] = 714.323000;
rHeight[5] = 707.456000;
rHeight[6] = 704.307000;
rHeight[7] = 703.265000;
rHeight[8] = 698.095000;
rHeight[9] = 693.474000;
rHeight[10] = 689.629000;
rHeight[11] = 690.043000;
rHeight[12] = 687.225000;
rHeight[13] = 681.496000;
rHeight[14] = 674.691000;
rHeight[15] = 670.653000;
rHeight[16] = 671.011000;
rHeight[17] = 671.136000;
rHeight[18] = 678.267000;
rHeight[19] = 671.866000;
rHeight[20] = 663.192000;
rHeight[21] = 668.949000;
rHeight[22] = 669.435000;
rHeight[23] = 672.994000;
rHeight[24] = 681.377000;
rHeight[25] = 688.460000;
rHeight[26] = 687.286000;
rHeight[27] = 685.627000;
rHeight[28] = 690.652000;
rHeight[29] = 698.944000;
rHeight[30] = 707.692000;
rHeight[31] = 715.061000;
rHeight[32] = 715.072000;
rHeight[33] = 717.626000;
rHeight[34] = 722.738000;
rHeight[35] = 727.249000;
rHeight[36] = 732.854000;
rHeight[37] = 736.461000;
rHeight[38] = 738.787000;
rHeight[39] = 733.003000;
rHeight[40] = 721.166000;
rHeight[41] = 712.007000;
rHeight[42] = 705.481000;
rHeight[43] = 706.119000;
rHeight[44] = 707.472000;
rHeight[45] = 708.312000;
rHeight[46] = 709.675000;
rHeight[47] = 708.193000;
rHeight[48] = 703.937000;
rHeight[49] = 704.529000;
rHeight[50] = 700.425000;
rHeight[51] = 692.880000;
rHeight[52] = 690.154000;
rHeight[53] = 690.253000;
rHeight[54] = 696.280000;
rHeight[55] = 698.164000;
rHeight[56] = 699.000000;
rHeight[57] = 697.994000;
rHeight[58] = 700.057000;
rHeight[59] = 700.465000;
rHeight[60] = 697.559000;
rHeight[61] = 693.175000;
rHeight[62] = 692.474000;
rHeight[63] = 692.992000;
rHeight[64] = 690.030000;
rHeight[65] = 686.917000;
rHeight[66] = 683.406000;
rHeight[67] = 668.907000;
rHeight[68] = 664.883000;
rHeight[69] = 664.568000;
rHeight[70] = 664.759000;
rHeight[71] = 664.100000;
rHeight[72] = 663.734000;
rHeight[73] = 664.071000;
rHeight[74] = 663.973000;
rHeight[75] = 667.204000;
rHeight[76] = 666.121000;
rHeight[77] = 671.091000;
rHeight[78] = 678.341000;
rHeight[79] = 686.958000;
rHeight[80] = 696.211000;
rHeight[81] = 701.791000;
rHeight[82] = 704.525000;
rHeight[83] = 710.477000;
rHeight[84] = 714.788000;
rHeight[85] = 718.988000;
rHeight[86] = 723.234000;
rHeight[87] = 724.375000;
rHeight[88] = 720.628000;
rHeight[89] = 717.377000;
rHeight[90] = 716.418000;
rHeight[91] = 716.617000;
rHeight[92] = 712.191000;
rHeight[93] = 711.342000;
rHeight[94] = 710.936000;
rHeight[95] = 708.500000;
rHeight[96] = 706.186000;
rHeight[97] = 704.476000;
rHeight[98] = 697.853000;
rHeight[99] = 696.068000;
rHeight[100] = 705.167000;
rHeight[101] = 707.574000;
rHeight[102] = 704.384000;
rHeight[103] = 707.134000;
rHeight[104] = 707.018000;
rHeight[105] = 702.002000;
rHeight[106] = 703.642000;
rHeight[107] = 702.091000;
rHeight[108] = 697.012000;
rHeight[109] = 693.851000;
rHeight[110] = 703.843000;
rHeight[111] = 705.915000;
rHeight[112] = 705.328000;
rHeight[113] = 700.745000;
rHeight[114] = 702.991000;
rHeight[115] = 703.413000;
rHeight[116] = 710.710000;
rHeight[117] = 718.448000;
rHeight[118] = 730.040000;
rHeight[119] = 738.378000;
rHeight[120] = 740.219000;
rHeight[121] = 743.697000;
rHeight[122] = 746.846000;
rHeight[123] = 745.762000;
rHeight[124] = 741.194000;
rHeight[125] = 740.478000;
rHeight[126] = 739.501000;
rHeight[127] = 738.827000;
rHeight[128] = 740.054000;
rHeight[129] = 742.117000;
rHeight[130] = 743.393000;
rHeight[131] = 742.496000;
rHeight[132] = 740.869000;
rHeight[133] = 741.549000;
rHeight[134] = 741.999000;
rHeight[135] = 743.313000;
rHeight[136] = 747.321000;
rHeight[137] = 750.547000;
rHeight[138] = 753.192000;
rHeight[139] = 757.576000;
rHeight[140] = 760.846000;
rHeight[141] = 765.507000;
rHeight[142] = 771.327000;
rHeight[143] = 777.317000;
rHeight[144] = 783.857000;
rHeight[145] = 793.437000;
rHeight[146] = 795.159000;
rHeight[147] = 800.922000;
rHeight[148] = 806.754000;
rHeight[149] = 810.352000;
rHeight[150] = 807.071000;
g[0] = 719.878000;
g[1] = 719.722000;
g[2] = 719.604000;
g[3] = 718.770000;
g[4] = 714.323000;
g[5] = 707.456000;
g[6] = 704.307000;
g[7] = 703.265000;
g[8] = 698.095000;
g[9] = 693.474000;
g[10] = 689.629000;
g[11] = 690.043000;
g[12] = 687.225000;
g[13] = 681.496000;
g[14] = 674.691000;
g[15] = 670.653000;
g[16] = 671.011000;
g[17] = 671.136000;
g[18] = 678.267000;
g[19] = 671.866000;
g[20] = 663.192000;
g[21] = 668.949000;
g[22] = 669.435000;
g[23] = 672.994000;
g[24] = 681.377000;
g[25] = 688.460000;
g[26] = 687.286000;
g[27] = 685.627000;
g[28] = 690.652000;
g[29] = 698.944000;
g[30] = 707.692000;
g[31] = 715.061000;
g[32] = 715.072000;
g[33] = 717.626000;
g[34] = 722.738000;
g[35] = 727.249000;
g[36] = 732.854000;
g[37] = 736.461000;
g[38] = 738.787000;
g[39] = 733.003000;
g[40] = 721.166000;
g[41] = 712.007000;
g[42] = 705.481000;
g[43] = 706.119000;
g[44] = 707.472000;
g[45] = 708.312000;
g[46] = 709.675000;
g[47] = 708.193000;
g[48] = 703.937000;
g[49] = 704.529000;
g[50] = 700.425000;
g[51] = 692.880000;
g[52] = 690.154000;
g[53] = 690.253000;
g[54] = 696.280000;
g[55] = 698.164000;
g[56] = 699.000000;
g[57] = 697.994000;
g[58] = 700.057000;
g[59] = 700.465000;
g[60] = 697.559000;
g[61] = 693.175000;
g[62] = 692.474000;
g[63] = 692.992000;
g[64] = 690.030000;
g[65] = 686.917000;
g[66] = 683.406000;
g[67] = 668.907000;
g[68] = 664.883000;
g[69] = 664.568000;
g[70] = 664.759000;
g[71] = 664.100000;
g[72] = 663.734000;
g[73] = 664.071000;
g[74] = 663.973000;
g[75] = 667.204000;
g[76] = 666.121000;
g[77] = 671.091000;
g[78] = 678.341000;
g[79] = 686.958000;
g[80] = 696.211000;
g[81] = 701.791000;
g[82] = 704.525000;
g[83] = 710.477000;
g[84] = 714.788000;
g[85] = 718.988000;
g[86] = 723.234000;
g[87] = 724.375000;
g[88] = 720.628000;
g[89] = 717.377000;
g[90] = 716.418000;
g[91] = 716.617000;
g[92] = 712.191000;
g[93] = 711.342000;
g[94] = 710.936000;
g[95] = 708.500000;
g[96] = 706.186000;
g[97] = 704.476000;
g[98] = 697.853000;
g[99] = 696.068000;
g[100] = 705.167000;
g[101] = 707.574000;
g[102] = 704.384000;
g[103] = 707.134000;
g[104] = 707.018000;
g[105] = 702.002000;
g[106] = 703.642000;
g[107] = 702.091000;
g[108] = 697.012000;
g[109] = 693.851000;
g[110] = 703.843000;
g[111] = 705.915000;
g[112] = 705.328000;
g[113] = 700.745000;
g[114] = 702.991000;
g[115] = 703.413000;
g[116] = 710.710000;
g[117] = 718.448000;
g[118] = 730.040000;
g[119] = 738.378000;
g[120] = 740.219000;
g[121] = 743.697000;
g[122] = 746.846000;
g[123] = 745.762000;
g[124] = 741.194000;
g[125] = 740.478000;
g[126] = 739.501000;
g[127] = 738.827000;
g[128] = 740.054000;
g[129] = 742.117000;
g[130] = 743.393000;
g[131] = 742.496000;
g[132] = 740.869000;
g[133] = 741.549000;
g[134] = 741.999000;
g[135] = 743.313000;
g[136] = 747.321000;
g[137] = 750.547000;
g[138] = 753.192000;
g[139] = 757.576000;
g[140] = 760.846000;
g[141] = 765.507000;
g[142] = 771.327000;
g[143] = 777.317000;
g[144] = 783.857000;
g[145] = 793.437000;
g[146] = 795.159000;
g[147] = 800.922000;
g[148] = 806.754000;
g[149] = 810.352000;
g[150] = 807.071000;
iZone[0] = 2;
iZone[1] = 2;
iZone[2] = 2;
iZone[3] = 2;
iZone[4] = 2;
iZone[5] = 2;
iZone[6] = 2;
iZone[7] = 2;
iZone[8] = 2;
iZone[9] = 2;
iZone[10] = 2;
iZone[11] = 2;
iZone[12] = 2;
iZone[13] = 2;
iZone[14] = 2;
iZone[15] = 2;
iZone[16] = 2;
iZone[17] = 2;
iZone[18] = 2;
iZone[19] = 2;
iZone[20] = 2;
iZone[21] = 2;
iZone[22] = 2;
iZone[23] = 2;
iZone[24] = 2;
iZone[25] = 2;
iZone[26] = 2;
iZone[27] = 2;
iZone[28] = 2;
iZone[29] = 2;
iZone[30] = 2;
iZone[31] = 2;
iZone[32] = 2;
iZone[33] = 2;
iZone[34] = 2;
iZone[35] = 2;
iZone[36] = 2;
iZone[37] = 2;
iZone[38] = 2;
iZone[39] = 2;
iZone[40] = 2;
iZone[41] = 2;
iZone[42] = 2;
iZone[43] = 2;
iZone[44] = 2;
iZone[45] = 2;
iZone[46] = 2;
iZone[47] = 2;
iZone[48] = 2;
iZone[49] = 2;
iZone[50] = 2;
iZone[51] = 2;
iZone[52] = 2;
iZone[53] = 2;
iZone[54] = 2;
iZone[55] = 2;
iZone[56] = 2;
iZone[57] = 2;
iZone[58] = 2;
iZone[59] = 2;
iZone[60] = 2;
iZone[61] = 2;
iZone[62] = 2;
iZone[63] = 2;
iZone[64] = 2;
iZone[65] = 2;
iZone[66] = 2;
iZone[67] = 2;
iZone[68] = 2;
iZone[69] = 2;
iZone[70] = 2;
iZone[71] = 2;
iZone[72] = 2;
iZone[73] = 2;
iZone[74] = 2;
iZone[75] = 2;
iZone[76] = 2;
iZone[77] = 2;
iZone[78] = 2;
iZone[79] = 2;
iZone[80] = 2;
iZone[81] = 2;
iZone[82] = 2;
iZone[83] = 2;
iZone[84] = 2;
iZone[85] = 2;
iZone[86] = 2;
iZone[87] = 2;
iZone[88] = 2;
iZone[89] = 2;
iZone[90] = 2;
iZone[91] = 2;
iZone[92] = 2;
iZone[93] = 2;
iZone[94] = 2;
iZone[95] = 2;
iZone[96] = 2;
iZone[97] = 2;
iZone[98] = 2;
iZone[99] = 2;
iZone[100] = 2;
iZone[101] = 2;
iZone[102] = 2;
iZone[103] = 2;
iZone[104] = 2;
iZone[105] = 2;
iZone[106] = 2;
iZone[107] = 2;
iZone[108] = 2;
iZone[109] = 2;
iZone[110] = 2;
iZone[111] = 2;
iZone[112] = 2;
iZone[113] = 2;
iZone[114] = 2;
iZone[115] = 2;
iZone[116] = 2;
iZone[117] = 2;
iZone[118] = 2;
iZone[119] = 2;
iZone[120] = 2;
iZone[121] = 2;
iZone[122] = 2;
iZone[123] = 2;
iZone[124] = 2;
iZone[125] = 2;
iZone[126] = 2;
iZone[127] = 2;
iZone[128] = 2;
iZone[129] = 2;
iZone[130] = 2;
iZone[131] = 2;
iZone[132] = 2;
iZone[133] = 2;
iZone[134] = 2;
iZone[135] = 2;
iZone[136] = 2;
iZone[137] = 2;
iZone[138] = 2;
iZone[139] = 2;
iZone[140] = 2;
iZone[141] = 2;
iZone[142] = 2;
iZone[143] = 2;
iZone[144] = 2;
iZone[145] = 2;
iZone[146] = 2;
iZone[147] = 2;
iZone[148] = 2;
iZone[149] = 2;
iZone[150] = 2;
double ff[35];
double pp[35];
ff[0] = 26.0000000000000000;
ff[1] = 0.1000000000000000;
ff[2] = 0.2500000000000000;
ff[3] = 0.5000000000000000;
ff[4] = 0.7500000000000000;
ff[5] = 1.0000000000000000;
ff[6] = 2.5000000000000000;
ff[7] = 5.0000000000000000;
ff[8] = 7.5000000000000000;
ff[9] = 10.0000000000000000;
ff[10] = 15.0000000000000000;
ff[11] = 20.0000000000000000;
ff[12] = 25.0000000000000000;
ff[13] = 30.0000000000000000;
ff[14] = 35.0000000000000000;
ff[15] = 40.0000000000000000;
ff[16] = 45.0000000000000000;
ff[17] = 50.0000000000000000;
ff[18] = 26.0000000000000000;
ff[19] = 26.0000000000000000;
ff[20] = 26.0000000000000000;
ff[21] = 26.0000000000000000;
ff[22] = 26.0000000000000000;
ff[23] = 26.0000000000000000;
ff[24] = 26.0000000000000000;
ff[25] = 26.0000000000000000;
ff[26] = 26.0000000000000000;
ff[27] = 26.0000000000000000;
ff[28] = 26.0000000000000000;
ff[29] = 26.0000000000000000;
ff[30] = 26.0000000000000000;
ff[31] = 26.0000000000000000;
ff[32] = 26.0000000000000000;
ff[33] = 26.0000000000000000;
ff[34] = 26.0000000000000000;
pp[0] = 10.0000000000000000;
pp[1] = 10.0000000000000000;
pp[2] = 10.0000000000000000;
pp[3] = 10.0000000000000000;
pp[4] = 10.0000000000000000;
pp[5] = 10.0000000000000000;
pp[6] = 10.0000000000000000;
pp[7] = 10.0000000000000000;
pp[8] = 10.0000000000000000;
pp[9] = 10.0000000000000000;
pp[10] = 10.0000000000000000;
pp[11] = 10.0000000000000000;
pp[12] = 10.0000000000000000;
pp[13] = 10.0000000000000000;
pp[14] = 10.0000000000000000;
pp[15] = 10.0000000000000000;
pp[16] = 10.0000000000000000;
pp[17] = 10.0000000000000000;
pp[18] = 0.0100000000000000;
pp[19] = 0.0200000000000000;
pp[20] = 0.0500000000000000;
pp[21] = 0.1000000000000000;
pp[22] = 0.2000000000000000;
pp[23] = 0.5000000000000000;
pp[24] = 1.0000000000000000;
pp[25] = 5.0000000000000000;
pp[26] = 10.0000000000000000;
pp[27] = 15.0000000000000000;
pp[28] = 20.0000000000000000;
pp[29] = 25.0000000000000000;
pp[30] = 30.0000000000000000;
pp[31] = 35.0000000000000000;
pp[32] = 40.0000000000000000;
pp[33] = 45.0000000000000000;
pp[34] = 50.0000000000000000;
// Results obtained from the MATLAB implementation of ITU-R P.452-18
// available on the ITU-R SG3 sharefolder
double expectedResult[35];
expectedResult[0] =  133.6689038908360487;
expectedResult[1] =  92.2525779364718517;
expectedResult[2] =  97.0685946600704028;
expectedResult[3] =  99.3774271763006567;
expectedResult[4] =  102.3283389633287896;
expectedResult[5] =  104.8312938359690349;
expectedResult[6] =  112.7982669426699260;
expectedResult[7] =  118.8254218155135220;
expectedResult[8] =  122.3569037936944994;
expectedResult[9] =  124.8706995964187456;
expectedResult[10] =  128.4593886514419410;
expectedResult[11] =  131.3176535733048240;
expectedResult[12] =  133.4237101724316403;
expectedResult[13] =  134.7714022275763170;
expectedResult[14] =  136.1446647794705314;
expectedResult[15] =  137.4377955456564280;
expectedResult[16] =  138.7415414962567866;
expectedResult[17] =  140.5336446401169610;
expectedResult[18] =  130.8424013157955414;
expectedResult[19] =  131.1260226863597040;
expectedResult[20] =  131.5009492126517330;
expectedResult[21] =  131.7845699479036057;
expectedResult[22] =  132.0681905698656351;
expectedResult[23] =  132.4431165407262370;
expectedResult[24] =  132.7267370486231357;
expectedResult[25] =  133.3852834174859083;
expectedResult[26] =  133.6689038908360487;
expectedResult[27] =  133.7992875894048552;
expectedResult[28] =  133.8986547240819789;
expectedResult[29] =  133.9838978376650971;
expectedResult[30] =  134.0604339467307398;
expectedResult[31] =  134.1313305070772799;
expectedResult[32] =  134.1985659529774466;
expectedResult[33] =  134.2635619955194386;
expectedResult[34] =  134.3274502290555006;
vector<double> rDisti;
rDisti.reserve(151);
vector<double> rHeighti;
rHeighti.reserve(151);
vector<double> gHeighti;
gHeighti.reserve(151);
vector<int> iZonei;
iZonei.reserve(151);
for (int i = 0; i < 151; i++) {
       rDisti.push_back(rDist[i]);
       rHeighti.push_back(rHeight[i]);
       gHeighti.push_back(g[i]);
       iZonei.push_back(iZone[i]);
}
for (int ii = 0; ii < 35; ii++) {
double result = tl_p452(maps,ff[ii], pp[ii], rDisti, rHeighti, gHeighti, iZonei, htg, hrg, phit_e, phit_n, phir_e, phir_n,  Gt, Gr, pol, dct, dcr, press, temp);
EXPECT_NEAR(expectedResult[ii], result, 0.000001);
  }
}
